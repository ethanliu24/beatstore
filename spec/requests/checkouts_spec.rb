# frozen_string_literal: true

require "rails_helper"

RSpec.describe CheckoutsController, type: :request do
  before do
    allow(Stripe::Checkout::Session).to receive(:create).and_return(
      OpenStruct.new(id: "cs_test_123", url: "https://checkout.stripe.com/pay/cs_test_123")
    )
  end

  describe "#create" do
    let(:user) { create(:user) }
    let(:cart) { create(:cart, user:) }
    let(:product) { create(:track) }
    let(:l1) { create(:license, title: "L1") }
    let(:l2) { create(:license, title: "L2") }
    let!(:cart_item1) { create(:cart_item, cart:, product:, license: l1) }
    let!(:cart_item2) { create(:cart_item, cart:, product:, license: l2) }

    before do
      sign_in user, scope: :user
    end

    it "should redirect userl to stripe checkouts with the session url generated by Stripe" do
      post checkout_url

      expect(response).to have_http_status(:see_other)
      expect(response).to redirect_to("https://checkout.stripe.com/pay/cs_test_123")
    end

    it "should create a mirror of cart with order and order items" do
      post checkout_url

      order = Order.last
      order_items = order.order_items

      expect(order).not_to be_nil
      expect(order.user).to eq(user)
      expect(order.currency).to eq("USD")
      expect(order.subtotal_cents).to eq(2000)

      expect(order.payment_transaction).not_to be(nil)
      expect(order.payment_transaction.status).to be(Transaction.statuses[:pending])
      expect(order.payment_transaction.amount_cents).to be(0)
      expect(order.payment_transaction.currency).to be("USD")

      expect(order_items.count).to eq(2)

      expect(order_items.first.quantity).to eq(1)
      expect(order_items.first.currency).to eq("USD")
      expect(order_items.first.unit_price_cents).to eq(1000)
      expect(order_items.first.product_type).to eq(Track.name)
      expect(order_items.first.product_snapshot["title"]).to eq("Track 1")
      expect(order_items.first.license_snapshot["title"]).to eq("L1")

      expect(order_items.last.quantity).to eq(1)
      expect(order_items.last.currency).to eq("USD")
      expect(order_items.last.unit_price_cents).to eq(1000)
      expect(order_items.last.product_type).to eq(Track.name)
      expect(order_items.last.product_snapshot["title"]).to eq("Track 1")
      expect(order_items.last.license_snapshot["title"]).to eq("L2")
    end

    it "should construct line items correctly for stripe" do
      post checkout_url

      expect(Stripe::Checkout::Session).to have_received(:create) do |args|
        item = args[:line_items].first
        expect(item[:quantity]).to eq(1)
        expect(item[:price_data][:unit_amount]).to eq(1000)
        expect(item[:price_data][:currency]).to eq("USD")
        expect(item[:price_data][:product_data][:name]).to eq("Track 1")
        expect(item[:price_data][:product_data][:description]).to eq("L1")
      end
    end
  end
end
