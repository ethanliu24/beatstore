<%= search_form_for @q, url: url,
  class: "w-full",
  html: {
    data: {
      controller: "track-filter",
      track_filter_target: "form",
    }
  } do |form| %>
  <%= render Ui::Filter::SearchBarComponent.new(
    form:,
    query: :title_or_description_or_tags_name_i_cont,
    placeholder: t("track.filter_placeholder")
  ) do |search| %>
    <%= search.with_submit_button do %>
      <%= form.submit t("label.search"), class: "border-1 border-primary-txt rounded cursor-pointer px-2" %>
    <% end %>

    <%= search.with_clear_button do %>
      <%= link_to t("label.clear"), url, data: { action: "click->track-filter#clearFilter" },
        class: "flex justify-center items-center border-1 border-secondary-txt text-secondary-txt rounded cursor-pointer px-2" %>
    <% end %>
  <% end %>

  <div class="flex justify-start flex-stretch flex-wrap gap-4 text-xs text-secondary-txt font-light select-none mb-2">
    <% [
      {
        field: t("track.genres"),
        classes: "filter-checkbox-container",
        component: Ui::Filter::CheckboxComponent,
        component_variables: {
          label: "genre",
          query: :genre_cont_any,
          options: genre_options,
          values: genre_options,
          container_data: { track_filter_target: "genreDropdown" },
          checkbox_data: { action: "change->track-filter#updateGenres" },
        },
      },
      {
        field: "BPM",
        classes: "filter-range-container",
        component: Ui::Filter::RangeComponent,
        component_variables: {
          form:,
          label: "bpm",
          lb_query: :bpm_gteq,
          ub_query: :bpm_lteq,
          container_data: { track_filter_target: "bpmDropdown" },
          range_data: { action: "change->track-filter#updateBPM" },
        },
      },
      {
        field: t("track.keys"),
        classes: "filter-checkbox-container",
        component: Ui::Filter::CheckboxComponent,
        component_variables: {
          label: "key",
          query: :key_cont_any,
          options: key_options.drop(1),  # assumes key_options starts with nil
          values: key_options.drop(1),
          container_data: { track_filter_target: "keyDropdown" },
          checkbox_data: { action: "change->track-filter#updateKeys" },
        },
      },
      {
        field: t("track.tags"),
        classes: "filter-checkbox-container",
        component: Ui::Filter::CheckboxComponent,
        component_variables: {
          label: "tag",
          query: :tags_name_cont_any,
          options: tag_options,
          values: tag_options,
          container_data: { track_filter_target: "tagDropdown" },
          checkbox_data: { action: "change->track-filter#updateTags" },
        },
      },
      # {
      #   field: t("track.order_by"),
      #   render: current_user&.admin? || request.path != tracks_path  # TODO fix infinite load sorting
      # },
      {
        field: t("track.visibility"),
        classes: "filter-checkbox-container",
        render: current_user&.admin?,
        component: Ui::Filter::CheckboxComponent,
        component_variables: {
          label: "visibility",
          query: :is_public_in,
          options: [ "Public", "Private" ],
          values: [ "true", "false" ],
          container_data: { track_filter_target: "visibilityDropdown" },
          checkbox_data: { action: "change->track-filter#updateVisibility" },
        },
      },
    ].each do |data| %>
      <% next unless data.fetch(:render, true) %>

      <%= render Ui::DropdownComponent.new(
        id: filter_dropdown_id(data[:field]),
        classes: data[:classes],
      ) do |dropdown| %>
        <% dropdown.with_trigger_button(
          id: filter_dropdown_id(data[:field]),
          classes: "flex justify-center items-center gap-1 bg-none cursor-pointer focus:ring-0 focus:border-none",
          data: { dropdown_toggle: filter_dropdown_id(data[:field]) }
        ) do %>
          <%= data[:field] %>
          <%= icon "chevron-down", class: "w-3 aspect-square" %>
        <% end %>

        <% dropdown.with_section do %>
          <%= render data[:component].new(**data[:component_variables]) %>
        <% end %>
      <% end %>
    <% end %>
  </div>

  <%# Sort dropdown %>
  <% unless request.path == tracks_path %>
    <div id="sort-dropdown" class="z-10 p-3 hidden bg-background dark:bg-secondary-bg rounded-lg shadow-sm">
      <span class="flex flex-col justify-start items-start gap-2 text-[0.7rem]">
        <% [
          { field: :title, title: t("track.title") },
          { field: :bpm, title: "BPM" },
          { field: :created_at, title: t("track.created_at") },
          { field: :updated, title: t("track.updated_at") },
        ].each do |option| %>
          <%= sort_link(@q, option[:field], option[:title]) %>
        <% end %>
      </span>
    </div>
  <% end %>

  <div class="flex justify-start items-stretch flex-wrap gap-2">
    <% [
      { title: t("track.genres"), label: "genre", action: "click->track-filter#clearGenres", for_admin: false },
      { title: "BPM", label: "bpm", action: "click->track-filter#clearBPM", for_admin: false },
      { title: t("track.keys"), label: "key", action: "click->track-filter#clearKeys", for_admin: false },
      { title: t("track.tags"), label: "tag", action: "click->track-filter#clearTags", for_admin: false },
      { title: t("track.visibility"), label: "visibility", action: "click->track-filter#clearVisibility", for_admin: true },
    ].each do |chip| %>
      <% next if chip[:for_admin] && !current_user&.admin? %>
      <div class="hidden w-fit h-fit bg-secondary-bg rounded-full px-2 py-0.5"
        data-track-filter-target="<%= "#{chip[:label]}Chip" %>">
        <span class="flex justify-center items-center flex-nowrap gap-1">
          <span id="<% "#{chip[:label]}-chip" %>" class="text-secondary-txt text-[0.6rem]">
            <%= "#{chip[:title]}:" %>
          </span>
          <p class="track-filter-chip-text text-nowrap text-[0.6rem]"></p>
          <div class="w-fit h-fit cursor-pointer" data-action="<%= chip[:action] %>">
            <%= icon "x", class: "w-3 h-3 aspect-square" %>
          </div>
        </span>
      </div>
    <% end %>
  </div>
<% end %>
