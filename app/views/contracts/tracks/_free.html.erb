<%= form_with(
    model: license,
    url: license.persisted? ? admin_license_path(license) : admin_licenses_path,
    method: license.persisted? ? :patch : :post,
    class: "license-form flex flex-col justify-center items-center gap-4 p-8 divide-y divide-secondary-txt/15 w-full"
  ) do |form| %>
  <% if license.errors.any? %>
    <div id="error_explanation" class="flash flash-error mb-2">
      <h2><%= pluralize(license.errors.count, "error") %> prohibited this track from being saved:</h2>

      <ul class="list-disc ml-6">
        <% license.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= form.hidden_field :contract_type, value: License.contract_types[:free] %>
  <%= form.hidden_field :price_cents, value: 0 %>
  <%= form.hidden_field :currency, value: "USD" %>

  <section class="w-full flex flex-col justify-start items-center gap-4">
    <div class="flex justify-start items-center gap-2 text-accent w-full">
      <%= icon "contract", class: "w-4 h-4 aspect-square" %>
      <h2 class="text-sm font-bold"><%= t("contracts.form.title.basic_info") %></h2>
    </div>

    <div class="field content-input-container">
      <%= form.label :title %>
      <%= form.text_field :title, autofocus: false, autocomplete: "off", class: "content-input" %>
    </div>
    <div class="field content-input-container" data-controller="char-count">
      <div class="flex justify-between items-center w-full">
        <%= form.label :description %>
        <div class="char-count">
          <span data-char-count-target="count">0</span><%= "/#{License::MAX_DESCRIPTION_LENGTH}" %>
        </div>
      </div>
      <%= form.text_area :description, autofocus: false, class: "content-input resize-none h-30",
        maxlength: License::MAX_DESCRIPTION_LENGTH, autocomplete: "off",
        data: { char_count_target: "input", action: "input->char-count#count" } %>
    </div>
    <div class="field content-input-container mt-4">
      <label class="inline-flex items-center mb-5 cursor-pointer">
        <%= form.check_box :default_for_new, class: "sr-only peer" %>
        <input type="checkbox" value="" class="sr-only peer" <%= "checked" if license.default_for_new %>>
        <div class="relative w-9 h-5 bg-secondary-txt/40 dark:bg-secondary-bg peer-focus:outline-none rounded-full
          peer-focus:ring-2 peer-focus:ring-accent
          peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full
          after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:rounded-full
          after:h-4 after:w-4 after:transition-all dark:border-1 dark:border-secondary-txt/40 peer-checked:bg-accent">
        </div>
        <%= form.label t("contracts.form.active_by_default"), class: "ml-4" %>
      </label>
    </div>
  </section>
  <section class="w-full flex flex-col justify-start items-center gap-4">
    <div class="flex justify-start items-center gap-2 text-accent w-full">
      <%= icon "map-pin", class: "w-4 h-4 aspect-square" %>
      <h2 class="text-sm font-bold"><%= t("contracts.form.title.territory") %></h2>
    </div>

    <div class="flex justify-center items-center gap-8 w-full" data-controller="locations">
      <div class="field content-input-container">
        <%= form.label t("contracts.form.label.area_law_applied", area: "Country") %>
        <%= form.select :country,
          [ nil ] + ISO3166::Country.all.map { |c| [c.translations[I18n.locale.to_s] || c.name, c.alpha2] },
          {}, class: "content-input",
          data: { action: "change->locations#provincesForCountry" } %>
      </div>
      <div class="field content-input-container">
        <%= form.label t("contracts.form.label.area_law_applied", area: "(State or Province and Country)") %>
        <%= form.select :province,
          (ISO3166::Country[form.object.country]&.subdivisions || {}).map { |k,v| [v["name"], k] },
          {}, class: "content-input", id: "license-province-select" %>
      </div>
    </div>
  </section>
  <%= form.fields_for :contract_details, OpenStruct.new(license.contract_details) do |c| %>
  <% end %>
  <section class="flex justify-end items-stretch w-full">
    <%= form.submit t("label.#{license.persisted? ? "update" : "create"}"), class: "button px-4 py-2" %>
  </section>
<% end %>
